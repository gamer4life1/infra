- name: install dependencies
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: add GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: add docker repository to apt
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: install docker
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: make sure docker service is started
  service:
    name: docker
    state: started
    enabled: yes

- name: Find list of services currently on the server
  register: services
  ansible.builtin.find:
    paths: /var/www/
    file_type: directory
    recurse: no

- name: Stop any services we no longer need
  loop: "{{ services.files }}"
  when: "'{{ item.path | basename }}' not in current_services"
  ansible.builtin.command:
    argv: ["/bin/bash", "{{ item.path }}/service.sh", "stop"]
    removes: "./service.sh"
    chdir: "{{ item.path }}"
  loop_control:
    label: "{{ item.path }}"

- name: Remove data for any services we no longer need
  loop: "{{ services.files }}"
  when: "'{{ item.path | basename }}' not in current_services"
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop_control:
    label: "{{ item.path }}"

- name: Create new directories for new services
  loop: "{{ current_services }}"
  ansible.builtin.file:
    path: "/var/www/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop_control:
    label: "{{ item }}"
